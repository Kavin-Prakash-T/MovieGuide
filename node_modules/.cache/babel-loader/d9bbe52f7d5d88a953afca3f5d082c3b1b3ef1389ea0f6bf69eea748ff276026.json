{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\MovieGuide\\\\movieguide\\\\src\\\\routes\\\\AllRoutes.js\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { MovieDetail, MovieList, Search, PageNotFound } from \"../pages/index\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AllRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"\",\n        element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"movie/:id\",\n        element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"movies/popular\",\n        element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"movies/top\",\n        element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"movies/upcoming\",\n        element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"Search\",\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(PageNotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = AllRoutes;\nvar _c;\n$RefreshReg$(_c, \"AllRoutes\");","map":{"version":3,"names":["Route","Routes","MovieDetail","MovieList","Search","PageNotFound","jsxDEV","_jsxDEV","Fragment","_Fragment","AllRoutes","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React Projects/MovieGuide/movieguide/src/routes/AllRoutes.js"],"sourcesContent":["import { Route,Routes } from \"react-router-dom\"\r\nimport { MovieDetail,MovieList,Search,PageNotFound } from \"../pages/index\"\r\n\r\nexport const  AllRoutes= () => {\r\n  return (\r\n    <>\r\n    <Routes>\r\n        <Route path=\"\" element={<MovieList/>} ></Route>\r\n        <Route path=\"movie/:id\" element={<MovieDetail/>} ></Route>\r\n        <Route path=\"movies/popular\" element={<MovieDetail/>} ></Route>\r\n        <Route path=\"movies/top\" element={<MovieDetail/>} ></Route>\r\n        <Route path=\"movies/upcoming\" element={<MovieDetail/>} ></Route>\r\n        <Route path=\"Search\" element={<Search/>} ></Route>\r\n        <Route path=\"*\" element={<PageNotFound/>} ></Route>\r\n    </Routes>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,SAASA,KAAK,EAACC,MAAM,QAAQ,kBAAkB;AAC/C,SAASC,WAAW,EAACC,SAAS,EAACC,MAAM,EAACC,YAAY,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1E,OAAO,MAAOC,SAAS,GAAEA,CAAA,KAAM;EAC7B,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA,CAACN,MAAM;MAAAU,QAAA,gBACHJ,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,EAAE;QAACC,OAAO,eAAEN,OAAA,CAACJ,SAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC/CV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEN,OAAA,CAACL,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC1DV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,gBAAgB;QAACC,OAAO,eAAEN,OAAA,CAACL,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC/DV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEN,OAAA,CAACL,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC3DV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,iBAAiB;QAACC,OAAO,eAAEN,OAAA,CAACL,WAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAChEV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEN,OAAA,CAACH,MAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAClDV,OAAA,CAACP,KAAK;QAACY,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEN,OAAA,CAACF,YAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC,gBACP,CAAC;AAEP,CAAC;AAAAC,EAAA,GAdaR,SAAS;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}